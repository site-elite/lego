//- Jade helper for BEM
//- Based on http://github.com/kizu/bemto

//- Settings
- var bemDefaultTag = 'div'
- var bemBlockPrefix = ''
- var bemElemPrefix = '__'
- var bemModPrefix = '_'

//- Some global variables
- var bemChain = []
- var bemContexts = ['block']


mixin bemTag(tag)
  //- rewriting tag name on different contexts
  - var newTag = tag || bemDefaultTag;
  - var contextIndex = bemContexts.length;

  //- Checks for contexts if no tag given
  if !tag
    if bemContexts[contextIndex - 1] === 'inline'
      - newTag = 'span';
    else if bemContexts[contextIndex - 1] === 'list'
      - newTag = 'li';

  //- Attributes context checks
  if attributes.href
    - newTag = 'a';
  if attributes.for
    - newTag = 'label';
  else if attributes.src
    - newTag = 'img';

  //- Contextual wrappers
  if bemContexts[contextIndex-1] === 'list' && newTag !== 'li'
    | <li>
  else if bemContexts[contextIndex-1] !== 'list' && bemContexts[contextIndex-1] !== 'pseudo-list' && newTag === 'li'
    | <ul>
    - bemContexts[bemContexts.length] = 'pseudo-list';
  else if bemContexts[contextIndex-1] === 'pseudo-list' && newTag !== 'li'
    | </ul>
    - bemContexts = bemContexts.splice(0,bemContexts.length-1);

  //- Setting context
  if ['a','abbr','acronym','b','br','code','em','font','i','img','ins','kbd','map','samp','small','span','strong','sub','sup','label','p','h1','h2','h3','h4','h5','h6'].indexOf(newTag) !== -1
    - bemContexts[bemContexts.length] = 'inline';
  else if ['ul','ol'].indexOf(newTag) !== -1
    - bemContexts[bemContexts.length] = 'list';
  else
    - bemContexts[bemContexts.length] = 'block';

  case newTag
    when 'a': a(attributes): block
    when 'abbr': abbr(attributes): block
    when 'address': address(attributes): block
    when 'article': article(attributes): block
    when 'aside': aside(attributes): block
    when 'b': b(attributes): block
    when 'blockquote': blockquote(attributes): block
    when 'body': body(attributes): block
    when 'button': button(attributes): block
    when 'caption': caption(attributes): block
    when 'cite': cite(attributes): block
    when 'code': code(attributes): block
    when 'dd': dd(attributes): block
    when 'del': del(attributes): block
    when 'dfn': dfn(attributes): block
    when 'dl': dl(attributes): block
    when 'dt': dt(attributes): block
    when 'em': em(attributes): block
    when 'fieldset': fieldset(attributes): block
    when 'footer': footer(attributes): block
    when 'form': form(attributes): block
    when 'h1': h1(attributes): block
    when 'h2': h2(attributes): block
    when 'h3': h3(attributes): block
    when 'h4': h4(attributes): block
    when 'h5': h5(attributes): block
    when 'h6': h6(attributes): block
    when 'header': header(attributes): block
    when 'i': i(attributes): block
    when 'ins': ins(attributes): block
    when 'kbd': kbd(attributes): block
    when 'label': label(attributes): block
    when 'legend': legend(attributes): block
    when 'li': li(attributes): block
    when 'mark': mark(attributes): block
    when 'nav': nav(attributes): block
    when 'ol': ol(attributes): block
    when 'p': p(attributes): block
    when 'pre': pre(attributes): block
    when 'q': q(attributes): block
    when 's': s(attributes): block
    when 'samp': samp(attributes): block
    when 'section': section(attributes): block
    when 'small': small(attributes): block
    when 'span': span(attributes): block
    when 'strong': strong(attributes): block
    when 'sub': sub(attributes): block
    when 'sup': sup(attributes): block
    when 'table': table(attributes): block
    when 'tbody': tbody(attributes): block
    when 'td': td(attributes): block
    when 'textarea': textarea(attributes): block
    when 'tfoot': tfoot(attributes): block
    when 'th': th(attributes): block
    when 'thead': thead(attributes): block
    when 'tr': tr(attributes): block
    when 'u ': u (attributes): block
    when 'ul': ul(attributes): block
    when 'var': var(attributes): block
    when 'hr': hr(attributes)
    when 'br': br(attributes)
    when 'wbr': br(attributes)
    when 'img'
      //- If there is no title we don't need it to show even if there is some alt
      if attributes.alt && !attributes.title
        - attributes.title = ''
      //- If we have title, we must have it in alt if it's not set
      if attributes.title && !attributes.alt
        - attributes.alt = attributes.title
      img(alt='', attributes)
    when 'input': input(type='text', attributes)
    when 'html'
      !!! 5
      html(attributes): block
    default: div(attributes): block
    //- Use interpolation here for non-tweaked tags when #659 and #660 are fixed
    //-default: #{newTag}(attributes): block

  //- Closing all the wrapper tails
  if bemContexts[contextIndex-1] === 'list' && newTag != 'li'
    | </li>


mixin bemBlock(tag, isElement)
  //- Rewriting the class for elements and modifiers
  if attributes.class
    - var bemClasses = attributes.class;
    - var bemBlock = bemClasses[0].match(new RegExp('^(((?!' + bemElemPrefix + '|' + bemModPrefix +').)+)'))[1]

    if !isElement
      - bemChain[bemChain.length] = bemBlock = bemBlockPrefix + bemBlock
      - bemClasses[0] = bemBlockPrefix + bemClasses[0]
    else
      - bemClasses[0] = bemChain[bemChain.length - 1] + bemElemPrefix + bemClasses[0]

    - var currentBlock = (isElement ? bemChain[bemChain.length - 1] + bemElemPrefix : '') + bemBlock

    //- Adding the block if there is only modifier and/or element
    if bemClasses.indexOf(currentBlock) === -1
      - bemClasses[bemClasses.length] = currentBlock

    each bemClass, i in bemClasses      
      if bemClass.match(new RegExp('^(?!' + bemElemPrefix + ')' + bemModPrefix))
        //- Expanding the modifiers
        - bemClasses[i] = currentBlock + bemClass
      else if bemClass.match(new RegExp('^' + bemElemPrefix))
        //- Expanding the mixed in elements
        if bemChain[bemChain.length - 2]
          - bemClasses[i] = bemChain[bemChain.length - 2] + bemClass
        else
          - bemClasses[i] = bemChain[bemChain.length - 1] + bemClass

    //- Write modified classes to attributes in the correct order
    - attributes.class = bemClasses.sort()

  +bemTag(tag)(attributes)
    block

  //- Closing actions (remove the current block from the chain)
  if !isElement
    - bemChain = bemChain.splice(0, bemChain.length - 1)
  - bemContexts = bemContexts.splice(0, bemContexts.length - 1)


//- Block
mixin b(tag)
  - bemBlockPrefix = 'b-'
  +bemBlock(tag)(attributes): block

//- Layout
mixin l(tag)
  - bemBlockPrefix = 'l-'
  +bemBlock(tag)(attributes): block

//- Element
mixin e(tag)
  +bemBlock(tag, true)(attributes): block
